

객체란?
    - 현실세계에 존재하는 모든 것을 객체라고함
    - 객체는   자신만의 데이터를 저장할 속성을 가지고 있고
               자신만의 동작이나 기능(메소드)을 포함하고 있는 메모리
    - 객체는?  속성 + 메소드 가 포함된 메모리 



자바스크립트에서 객체의 종류
    1. 내장객체 :  웹브라우저의 자바스크립트 엔진에 내장된 객체.
                              필요한 경우에 생성해서 사용할수 있습니다.
       <내장객체 종류>
        - 문자열을 조작하는 객체(String)
        - 날짜 정보를 제공하는 객체  (Date)
        - 배열 객체( Array )
        - 수학 연산 처리 기능을 가지는 객체 (Math)


    2. 브라우저 객체 모델(BOM : Borower Object Model) : 
    
       웹브라우저의 정보를 제공하는 객체

        <브라우저 객체 모델 종류>
         - 웹브라우저 창 정보를 제공하는 객체 (window)
         - 모니터 해상도 정보를 제공하는 객체 (screen)
         - 웹브라우저 주소창에 입력되는 정보를 제공하는 객체(location)
         - 한번 요청 했던 이전 페이지나 다음페이지를 요청시 사용하는 객체 (history)
          ......


    3. 문서 객체 모델 (DOM : Document Object Model) : 

       HTML태그들을 문서객체라고 표현합니다.

        <문서 객체 종류>

          <h1>안녕<h1> <------ h1문서객체
          <div>영역</div> <------ div문서 객체 
          .....  이렇게 수많은 html태그들을 문서객체 들이라고 부릅니다.


    4. 사용자 정의 객체 : 
       
       필요에 의해 개발자가 직접 만들어서 사용하는 객체 


       사용자 정의 객체를 생성하는 문법1.

              변수선언 = new Object();

              설명 : 내장 객체 메모리를 생성할때  
             new 라는 키워드와 Object생성함수 이용

              --------------------------->  ob1.html 

        사용자 정의 객체를 생성하는 문법2.

              리터럴 표기법  { } 이용

              let 참조변수  = { 속성:값,  속성:값,  속성:값,  메소드정의   };


              ----------------------------> ob1_1.html 


    정리
                  new Object()를 이용해 객체 메모리를 생성하는 방법과
                  {}를 이용해 객체메모리를 생성하는 방법 차이

                  new Object()                    {} 리터럴표기법

    구분           let obj = new Object();           let obj = {속성:값, 속성값, 속성:function(){} };

    속성 		추가방식  객체 생성후 속성나중에추가       	객체 생성 동시에 속성:값 형태로
                                                   		정의할수 있다.

    가독성          상대적으로 덜직관적              				더직관적이고 간결하다

    성능             약간 느릴수 있음                 				더 빠름




    ---------------------------------------->  object-1.html 

    ---------------------------------------->  object-2.html 


    현실에 존재하는 객체
     예) 자바의 정석 책 객체,   수학의 정석 책 객체
         소금붕어빵 객체,    설탕붕어빵객체
         롯데캐슬 아파트 객체 
         이편한세상 아파트 객체
         현대 아파트 객체 


         설계도,틀 -> 클래스 또는 생성자함수 


            생성자함수(설계도)를 만들고 객체들 생성해 보기 
         --------------------------------> constructor-1.html 

         클래스(설계도)를 만들고 객체들 생성해보기
         ---------------------------------> class-1.html

         생성자 함수와 클래스를 사용해 원기둥의 부피 구하기 
         --------------------------------->  cylinder.html 

      
---------------------------------------------------------------------------


1. 내장객체 
       
       # Date 객체 (속성 + 메소드)
          - 날짜나 시간관련 정보를 제공 해주는 객체
          - 날짜나 시간관련 정보를 제공 받을때 Date객체는 new 키워드로 생성해야함

          -----------------------> date_ob1.html 
          -----------------------> date_ob2.html 

       # Number객체 (속성 + 메소드)
          - 숫자 표기법에 관한 메소드를 제공하는 객체

          ------------------------> number_ob1.html 

       # Math객체 (속성 + 메소드)
         - 수학연산처리 관련 속성과 메소드들을 제공하는 객체
         - 랜덤값을 추출하는 기능의 메소드를 많이 사용함

         ------------------------> math_ob1.html 

         ------------------------> math_ob2.html 

         ------------------------> math_ob3.html
        
       # Array배열객체 (속성 + 메소드)
        - 여러 값을 하나의 변수메모리를 잘개잘개 칸을 나누어 저장할수 있는 메모리공간
          
          -----------------------> array_ob1.html 
          -----------------------> array_ob2.html


      # 문자열 String객체  

         1. String객체 란?
         - 변경되지 않을(불변) 문자열 데이터를 저장 해 놓고 문자열을 조작(변경,특정부분을 잘라냄)할 메모리 공간.
         - 자바스크립트에서 문자열을 다루기 위한 메모리 공간.
         - String 객체 메모리를 생성하면 객체 메모리 내부에 문자열을 조작할 수 있도록 다양한 기능(메서드)을 제공합니다.


         참고. "불변"이라는 용어는 프로그래밍에서 데이터가 생성된 후 변경될 수 없음을 의미합니다. 
               자바스크립트에서 문자열과 같은 불변 객체는 한 번 생성된 후 그 내용을 수정할 수 없습니다
         참고. 예) 
                  let str = "Hello";
                  //		     01234   <- 각문자에 붙는 index

                  str[0] = "h"; // 이 코드는 아무런 효과가 없음

                  console.log(str); //출력하면  "Hello"가 나옴 



         2. 문자열을 저장하는 String객체 메모리 생성 방법 2가지 

         - 방법1. 문자열 리터럴을 사용해 String객체 메모리 생성 하는 방법

                  가장 일반적인 방법은 문자열 리터럴을 사용하는 것입니다. 

                  문자열 리터럴은 큰따옴표(")나 작은따옴표(')로 감싸서 문자열을 직접 정의하는 방식입니다.

            방법1. 문법
                     let 변수 = "큰따_옴표로 감싼 문자열";
                     
                     또는 

                     let 변수 = '작은_따옴표로 감싼 문자열';

                         변수 = '다른문자열';   저장 X

               참고.
                     - 문자열 리터럴(예: "Hello")을 생성하면, 
                     자바스크립트 엔진은 해당 문자열의 내용을 컴퓨터 RAM에 저장하고, 
                     그에 대한 주소번지를 생성하여 변수에 할당합니다.
                     이 때, 문자열은 불변(immutable) 특성을 가지므로, 
                     같은 문자열이 여러 번 사용되면 컴퓨터 RAM에서 중복 저장되지 않고, 
                     동일한 컴퓨터 RAM(메모리) 주소번지에 접근해서 해당 문자열을 사용할 수 있습니다.


         - 방법2. new와 함께 String 생성자를 사용하여 문자열이 저장될 String객체 메모리 생성 하는 방법

            방법2. 문법
                     let 변수 = new String("저장할 문자열");

               참고. 
                  -  new String("Hello")와 같이 String 객체를 생성하면, 
                        자바스크립트 엔진은 이 객체를 위한 메모리 공간을 할당합니다. 
                     이 String객체는 문자열 데이터와 함께 메서드와 속성을 포함하고 있습니다.		   	


         비교(생성 방법1.  방법2.) 표

               특징						문자열 리터럴						String 생성자
               생성 방식					 "안녕하세요"						new String("안녕하세요")
            데이터 타입				원시 데이터 타입 (primitive)			객체 타입 (object)
               불변성							불변							객체 자체는 불변 문자열을 포함
               비교							값 비교							객체 메모리 주소(참조) 비교
         메모리 사용						직접 컴퓨터RAM에 문자열 저장	   추가적인 String객체 메모리 생성 하여 문자열 저장 




            -------------------> string_0b1.html  파일 생성 및 실습	     
            -------------------> string_0b2.html  파일 생성 및 실습	
            -------------------> string_0b3.html  파일 생성 및 실습
            -------------------> string_0b4.html  파일 생성 및 실습
            



      # 정규 표현 객체
      -  정규표현(RegExp) 객체는 입력 요소에 데이터를 규칙에 맞게 작성 했는지 판단해서
         알려주는  객체 이다.
      
      -   내가 지정한 규칙대로 단어가 입력 되었는지, 잘못된 단어를 포함하고 있는지 찾을때 사용함.
      
      -  정규 표현 객체를 생성하는 기본문법 2가지
         1. let  참조변수 = new RegExp(패턴, 검색옵션);
         2. let  참조변수 = /패턴/검색옵션;
         
         검색옵션을 사용하면 일치하는 단어를 찾을때, 다양한 조건과 규칙을 붙여 검색할 수 있습니다.
         가령, 영문 문자 중 찾고자 하는 단어를 검색할 때, 대문자 소문자를 가리지 않을 것인지, 
         또는 찾고자 하는 문자가 문장 맨 앞에서 부터 일치 하는지 등의 다양한 옵션을 지정할 수 있다.
         
      - 정규 표현 검색 옵션
         종류										설명
         *											0회 이상 일치하는 문자를 검사할때 사용함.
         +											1회 이상 일치하는 문자를 검사할때 사용함.
         i											찾는 문자가 영문일 경우  대-소문자를 구분 하지 않습니다.
         ?											0회 또는 1회, 규칙에 맞는 문자가 있는지 검사 합니다.
         g											옵션에 g가 없으면 데이터의 왼쪽부터 규칙에 일치하는 문자 한 개만 찾지만,
                                          g를 넣으면 규칙에 맞는 모든 문자를 찾습니다.
         m											데이터의 행이 바뀌어도 규칙에 맞는 문자를 찾습니다.
         $											문자열 끝부분에 규칙에 맞는 문자를 찾습니다
         ^											문자열 앞에서부터 규칙에 일치하는 문제를 찾습니다. 또는 부정을 나타냅니다.
         
         \d										숫자 하나를 찾습니다.
         \D										숫자가 아닌 문자 하나를 찾습니다.
         \s											공백 문자(스페이스)를 찾습니다.
         [0~9][A~Z][a~z]				숫자, 대문자 영문, 소문자 영문을 찾습니다.
         \w										알파벳, 숫자, 밑줄(_) 기호를 찾습니다.
         \W										알파벳,숫자, 밑줄(_) 기호를 제외한 문자를 찾습니다.
         a|b										a또는 b인지 검사할때 사용.											
                                          
                                    
      - 정규 표현객체의  메서드 	
         ~메서드를 사용하면  지정한 특정 문자 데이터가 정규 표현 규칙에 맞게 작성되었는지 알수 있음.
         
         종류												설명
         test()										지정된 규칙에 맞는 단어가 있으면 true값을 반환함.
         exec()										지정된 규칙에 맞는 단어가 있으면 해당 단어를 반환함.											
                                          
            ------------------->  reg_0b1.html  파일 생성 및 실습											
            ------------------->  reg_0b2.html  파일 생성 및 실습			
                                          
                                          

         https://inpa.tistory.com/entry/JS-%F0%9F%93%9A-%EC%A0%95%EA%B7%9C%EC%8B%9D-RegExp-%EB%88%84%EA%B5%AC%EB%82%98-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-%EC%89%BD%EA%B2%8C-%EC%A0%95%EB%A6%AC                                 

         https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/%EC%A0%95%EA%B7%9C%EC%8B%9D

------------------------------------------------------------------------------------------------------------------------

2. 브라우저 객체 모델 (BOM)																				
																				
					# 브라우저 객체란?  
							-브라우저에 내장된 객체를 말함.
				
					# window 객체
							- 브라우저 객체의 최상위 객체.
							-window객체의 메서드 종류
								종류											설명
								open()									새창을 열때 사용함.
								alert()										경고 창을 띄울때 사용함.
								prompt()								질의 응답창을 뛰웁니다.
								confirm()								확인/ 취소 창을 띄웁니다.
								moveTo()								창의 위치를 이동 시킬때 사용함.
								resizeTo()								창의 크기를 변경 시킬때 사용함.
								setInterval()							일정 간격으로 지속적으로 실행문을 실행 시킬때 사용함.
								setTimeout()							일정 간격으로 한번 만 실행문을 실행 시킬때 사용함.
									
								------------------------------>  window2.html
								------------------------------>  window.html, popup.html
								------------------------------>  window3.html
								------------------------------>  window3_1.html  타이머 기능 만들기 
								------------------------------>  window4.html 
                        ------------------------------>  window5.html

									
									
					# screen 객체
						 -사용자의 모니터 정보를 제공 하는 객체.
						 -가령, 모니터의 너비나 높이 또는 컬러 표현bit를 반환 합니다.
						 -기본 문법
						   screen.속성;
						   	예)  screen.width;  <--모니터의 너빗값을 반환 합니다.
						 -screen객체의 속성 종류
						 	screen.width				화면의 너빗값 반환
						 	screen.height			화면의 높잇값 반환
						 	screen.availWidth	작업 표시줄을 제외한 화면의 너빗값을 반환
						 	screen.availHeight	작업 표시줄을 제외한 화면의 높잇값을 반환
						 	screen.colorDepth	사용자 모니터가 표현 가능한 컬러bit를 반환
						 	
						 	
						# location객체 	
							- 사용자 브라우저의 주소창에 url에 대한 정보(속성)와 새로고침 기능(메서드)을 제공하는 객체.
							
							- 기본문법
								location.속성;			또는 			location.메서드();
									예)  location.href;  //주소 영역에 참조 주소(url)를 반환합니다.
						   	
						   	- location객체 속성	/	메서드 종류
						   				종류											설명
						   				location.href							주소영역에 참조 주소를 설정하거나 URL을 반환 합니다.
						   				location.href = 재요청할 주소;
						   				location.hash						URL에 해시값(#에 명시된 값)을 반환 합니다
						   																예) http://www.easyspub.com#hllo
						   				location.hostname				URL에 호스트 이름을 설정하거나 반환 합니다.
						   				location.host							URL에  호스트 이름과 포트번호를 반환 합니다.
						   				location.port							URL에 포트번호를 반환 합니다.
						   				location.protocol					URL에 프로토콜을 반환 합니다.
						   				location.search						URL에 쿼리(요청값)을 반환함.
						   																예) http://www.easyspub.com?pageNum=1 &sort=DESC
						   				location.reload()					웹브라우저의 새로 고침이 일어남		
									
									
									------------------------------------->   location.html
									
									
									
									
						# history객체	
							-history 객체는 사용자가 방문한 사이트중 이전에 방문한 사이트와 다음 방문한 사이트로 
							다시 돌아 갈수 있는 속성과 메서드를 제공함.
							
							-기본 문법
								history.메서드				또는 				history.속성
									예) history.back();		//바로 이전 페이지로 이동 합니다.
							-history 메서드 / 속성 종류
										종류									설명
										history.back()				이전 방문한 페이지로 이동 합니다.
										history.forward()			다음 방문한 페이지로 이동 합니다.
										history.go(이동 숫자)			이동 숫자가 -2이면 2단계 이전 페이지로 이동함.
										length						방문 기록에 저장된 목록의 개수를 반환함.
									
									------------------->       his_obp1.html  파일 생성 및 실습	
															         his_obp2.html  파일 생성 및 실습
															         his_obp3.html  파일 생성 및 실습



   ------------------------------------------------------------------------------------------------------


3. 문서 객체 모델 (Document Object Model)
                  (D        O      M)

      주제1. DOM에 대해서

             DO(Document Object)
             - HTML 문서의 모든 구성요소(<html></html>, <body></body>, <h1></h1> 등..)

             DOM(Document Object Model)
             - 문서객체모델? 웹브라우저에 표시되는 HTML문서내부에 작성된
                             DO의 구조를 객체화한 모델구조(DOM트리)를 의미함 

               -------------------------------->  dom_basic.html                

             노드 타입 살펴보기
             - DOM 트리는 HTML 문서를 기반으로 생성되고,
               HTML 문서의 각 구성요소는 DOM트리에서 노드가 되는 것입니다.
               하지만 모든 노드가 똑같은 타입으로 생성되는 것은 아니다.
             - HTML 문법에서도 태그, 속성, 주석 이 있는 것처럼
               노드도 HTML구성요소에 따라 서로 다른 타입 이 됩니다.

             - 주요 노트 타입  종류

                     타입                                 설명
                   문서노드(Node.DOCUMENT_NODE)          최상위 document객체의 노드타입
                                                          document -> HTML파일 

                   요소노드(Node.ELEMENT_NODE)           h1,p태그와 같은 요소의 노드타입
                                                          <h1></h1>
                                                          <p></p>

                   속성노드(Node.ATTRIBUTE_NODE)          href, src와 같은 속성의 노드타입
                                                          <a href="#">이동</a>

                   텍스트노드(Node.TEXT_NODE)            텍스트에 해당하는 노드타입
                                                          <h1>텍스트노드</h1>

                   주석노드(Node.COMMENT_NODE)            주석기호에 해당하는 노드타입
                             
                                                            /**/
      주제2. 노드 선택하기

                방법1. 속성를 이용해 노드 선택하기

                  document최상위 객체는 dom트리를 탐색하면서
                  원하는 노드를 선택할수 있는 속성들을 제공합니다.

                  구분              속성                       설명
                  모든 노드탐색     parentNode             부모노드를 반환
                                    childNodes             모든 자식 노드를 반환
                                    firstChild             첫번째 자식 노드를 반환
                                    lastChild              마지막 자식 노드를 반환
                                    previousSibling        이전 형제 노드를 반환
                                    nextSibling            다음 형제 노드를 반환


                  요소 노드탐색     parentElement          부모 요소노드 반환
                                    children               자식 요소노드 반환
                                    firstElementChild      첫번쨰 자식요소 노드 반환
                                    lastElementChild       마지막 자식요소 노드 반환
                                    previousElementSibling  이전 요소노드를 반환
                                    nextElementSibling      다음 요소노드를 반환

                  -----------------> getElement.html 

                방법2. 메서드로 노드 선택하기 
                   
                   방법2-1. 속성과 태그명 사용하기 - get으로 시작하는 메소드 이용

                     메서드 종류                      설명
                     getElementById(id속성값)      id속성값과 일치하는 요소노드 1개만 선택
                        
                     getElementsByClassName(class속성값)  class속성값과 일치하는
                                                          요소노드를 모두 선택

                     getElementsByTagName(태그명)         태그명과 일치하는 요소노드를 모두 선택

                     ------------------------------------>  getElement2.html 


                   방법2-2. css문법선택자 사용하기 - query메소드 이용

                   - document객체의 메서드 중에서 매개변수로 CSS선택자를 전달받아 
                     노드를 선택하는 메서드 


                   -   메서드 종류 2가지 

                           종류                                      설명
                           querySelector(css선택자문법)          매개변수로 넘어오는
                                                                 CSS선택자에 해당하는 노드를 1개만 선택
                                                                 
                           querySelectorAll(css선택자문법)       매개변수로 넘어오는
                                                                 CSS선택자에 해당하는 노드를 모두 선택

                        --------------------------->  query.html  


        주제3. 노드 조작하기
        -  document객체의 속성이나 메소드로 문서 객체 모델의 노드를 선택하고 나면
           선택한 노드에 여러 조작을 할수 있습니다.

            1. 콘텐츠 조작하기
            - 선택한 노드의 타입이 요소노드라면 특정속성들을 사용해 콘텐츠를 조작할수 있다

                  속성종류                설명
                  textContent           요소노드의 모든 텍스트에 접근합니다.
                  innerText             요소노드의 텍스트 중 웹브라우저에 표시되는 텍스트에만 접근
                  innerHTML             요소노드의 텍스트 중 HTML태그를 포함한 텍스트에만 접근

                  -------------------------------->   content.html       
            
            2. 스타일 조작하기
            -  선택한 노드의 타입이 요소노드라면 style속성으로
               요소에 CSS을 지정할수 있다.

               문법
                     요소노드선택.style.css속성명=속성값;

               -----------------------------------> style_set_1.html 
               -----------------------------------> style_set_2.html 
            
            3. 데이터 속성 조작하기 
            -  HTML5버전에서 추가된 data-* 속성은 HTML문법에서 사용할수 있는 속성이외
               사용자가 원하는 속성을 HTML태그에 추가 할수 있게 한 사용자정의 속성임
            -  data-* 속성은 자바스크립트에서 dataset속성을 사용해 조작할수 있습니다
            -  dataset속성은 HTML문서에서 data-*속성값을 가져오거나 지정할수 있습니다

               -------------------------------------> dataset.html 

            4. 메서드로 속성 조작하기 

            -  document객체의 속성 이외의 
               선택한 노드의 메소드를 사용하면 
               모든 속성을 전체적으로 조작할수 있습니다.

               속성 조작 메소드 종류               설명

                  노드.getAttribute("속성명");      전달한 속성명에 대한 속성값을 가져옴

                  노드.setAttribute("속성명","속성값");  전달한 속성명에 대한 속성값 설정

                  노드.removeAttribute("속성명");    전달한 속성명의 속성을 삭제함 

                  ----------------------> attribute.html 
                  ----------------------> attribute2.html 
                  ----------------------> attribute3.html 
            
            
            5. 노드자체를  추가 및 삭제하기 

                5-1. 노드자체를 추가 하기
                - DOM트리구조에서 새로운 노드를 생성하여,
                  생성한 노드를 기존 DOM트리구조와 연결하여
                  동적으로 새로운 요소노드를 화면에 추가할수 있다. 

                  [노드 추가 메소드 종류 표]

                        구분              메서드종류                             설명

                        노드생성          createElement()                     요소노드 생성
                                          createTextNode()                    텍스트노드 생성
                                          createAttribute()                   속성노드 생성 

                     노드연결     기준노드.appendChild(자식노드)    기준노드에서 자식노드를 연결함
                                                                       
                                 기준노드.setAttributeNode(속성노드)  기준노드에 속성노드를 연결함



                  ---------------------> createNode.html 



               5-2. 노드 삭제 하기 
               - 생성되어 있는 노드를 삭제하자
                 삭제 사용되는 메소드는 removeChild()메소드 사용
                 removeChild()메소드는 부모노드에 연결된 자식노드를 삭제합니다.

                 문법
                      부모노드선택.removeChild(삭제할자식노드);

                 ---------------------------------> removeChild.html 

                 ---------------------------------> removeChildAll.html 

                 -----  Array.from 메소드 사용법 ---> Array.html 
                 

      주제4. 폼 양식 조작하기

            1. form요소노드 선택해오기

               1.1 document객체의 forms속성을 이용해 
                   현재 .html웹문서에 작성되어 있는 모든 <form></fomr>요소노드들을
                   HTMLCollection객체에 담아 반환(선택해옵니다.)

                   -------------------> forms.html 

                   ------ 문서 객체 모델을 사용하여 자동차 견적 미리보기 페이지 만들기
                   --------------------> esimate_test.html 

                   -------계산기 만들기----> 계산기.html

                   ---------------------> forms_element.html 

            2.  회원가입 양식 유효성 체크
                  ----------------------> Register.html 