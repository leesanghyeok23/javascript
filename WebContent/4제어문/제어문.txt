

1. 제어문이란?
    - 제어문은 프로그램의 흐름을 제어할 수 있도록 도와주는 실행문을 말함
    - 제어문의 종류  :  조건문, 선택문, 반복문

2. 조건문
    - 조건문은 조건식의 값이 참(true)인지 아니면 거짓(false)인지에 따라
      실행문의 제어가 결정되는 구문

      예를 들어, 질의응답창을 이용해 사이트 방문자가 좋아하는 숫자를 입력받습니다
      이때 입력된 값을 2로 나누어 나머지값이 0이라면?
   "당신이 좋아하는 숫자는 짝수 입니다" 라고 출려되게 한다고 합시다
      이렇게 수를 나눈 나머지 값이 조건식의 만족 여부에 따라 출력되는 실행문을 
      달리 나타나게 하려면 조건문을 사용해야 합니다.

    - 조건문의 종류 :  if문 ,  else문 ,   else if문 

       if문  : 조건식을 만족(true)할 경우에만 실행문 실행 합니다.

                if(조건식){
          			실행문;
                }
              ------------------------->  if_1.html 파일 생성 및 실습 

      else문 : else문은 if문의 조건식을 만족(true)할 경우와 
               만족하지 않았을(false) 경우따라 실행되는 실행문이 달라지게 하는 구문
               즉! 두가지의 결과가 나올수 있다.

               if(조건식){
                  	실행문1;
               }else{
                  	실행문2;
               } 
               해석 :  먼저 if문의 조건식을 판단해서 조건식의 결과 참일 경우
                         실행문1을 실행하고 else는 판단안하고 빠져나감  
                         하지만 if문의 조건식의 결과가 거짓일 경우
              else 구문의 {  }중괄호 내부에 작성된 실행문2만 실행합니다.

              -----------------------> else_1.html 파일 생성 및 실습   

       else if문 : 두가지 이상의 조건식과 정해 놓은 조건식을 만족하지 않았을때 
                                  실행되는 실행문으로 이루어져 있는 구문        

            해석 :  가장위에 있는 조건식1부터 조건식3까지 차례로 검사를 한후
                    만족(참,true)하는 값이 나오면 그에 해당하는 실행문을 실행하고
                    전체 조건문을 종료함
                    하지만 조건식중~~ 만족(참,true)하는 값이 하나도 없을때는
                    가장 아랫쪽에 작성해 놓은 else문의 중괄호 { ....}에 있는
                    실행문을 실행 시키고 종료함

               if(조건식1){

                  	실행문1;
                
               }else if(조건식2){

                  	실행문2;

               }else if(조건식3){

                  	실행문3;
               
               }else {
                  // 조건식1, 조건식2,조건식3 모두 만족하지 않은 경우 실행할 구문 
                  	실행문5;

               }
               
            ------------------------------>  elseif_1.html 

            중첩 if문 :  if문 블럭 내부에 안쪽 if문 작성하는 구조의 구문!

                if(조건식1){ //바깥쪽 if문

                    	조건식1만 참일 경우 실행할 코드 작성;

                    if(조건식2){ //안쪽 if문 

                       	 조건식1과 조건식2가 모두 참일경우 실행할 코드작성;
                   
                    }                  

                }

3. 선택문  switch문
    - 여러개의 조건을 확인하여 해당하는 코드 블록{}중괄호 안에 작성된 실행문을 
           실행시키는 제어문중의 하나 
    - 조건이 많을때 if else if 구문 보다 가독성을 높이고
      코드의 간결함을 유지하는데 유리한 제어문 중 하나이다.

	


      switch(평가될_표현식) {

          case value1:
              //value1이 평가될_표현식의 결괏값과 일치할때 실행될 코드작성;

              //현재 case 블록을 종료하고
              //switch문을 빠져나옵니다.
              //주의 할점은 break를 작성하지 않으면 
              //그다음 case블록을 연달아 검사 하기 떄문에 꼭! break;구문은
              //case 유형의 가장 마지막줄에 한번은 꼭! 작성 해야한다.
              break;

          case value2:
              //value2이 평가될_표현식의 결괏값과 일치할때만 실행될 코드작성;    

              break;

          ...

          default:
              //위에 작성된 어떤 case유형의 vaule들도 평가될_표현식의 결괏값과
              //일치하지않을때 실행될 코드 작성;
              break;//마지막 default 자리에 적는 break는 생략 가능 하다.

      }

      ---------------------------------------------------------------

      해석
      변수에 저장된 값과 switch문에 있는 경우(case)의 값을 검사하여, 
      변수와 경우의 값에서 일치하는 값이 있을 때 그에 해당하는 실행문을 실행 함.
      만일 경우(case)의 값 중에 일치하는 데이터가 없으면, 마지막 default에 있는 실행문을 실행하고
      switch문을 종료 합니다.


      그림 

              let 변수 = 값;

              switch(변수) {

                 case 값1:
               		 실행문1;
                    break;

                 case 값2:
                   	 실행문2;
                    break;                   

                 ....

                 default:
                   	 실행문3;
                    break;
              }

      
      ------------------------->  switch_1.html 


 elseif_1.html 파일에 작성된  if  else if  else 구문들을 모두 switch문으로 변경해보자
    ------------------------------>  elseif_1.html 복사해서 
                                                                     파일명을 switch_2.html변경해서 만든후 작성


   과제
   ----------------------> ex1.html  ~ ex4.html 파일 





   4. 반복문
      - 반복문을 이용하면 실행문을 원하는 횟수만큼 반복하여 실행시킬수 있음
      - 반복문의 종류 :  while ,  do while,  for

      주제1. 반복문은 왜 사용할까?   repeat-1.html 

      - while 반복문 ?
         1. while 반복문은 조건식을 만족하는 동안까지만 실행문을 여러번 반복해서
            실행시킬수 있는 반복문 종류 중 하나

         2. 문법
                   
 
                   let 변수 = 초깃값; //1. 변수에 조건을 판단하는 조건 초깃값 저장

                   while(조건식){    //2. 그다음 while문을 작성해 사용

                        실행문;

                        증감식;
                   }

                   while반복문의 실행 순서
                   1.  조건식을 검사하고 만약 참일경우에만?
                   2.  중괄호 {} 내부에 작성된 실행문 및 증감식을 실행 한다.
                   3.  다시 조건식을 검사하고 만약 거짓일 경우에만? while {}중괄호를 빠져나오고
                                           참일경우에는? 1. 2. 를 순서대로 다시 반복해서 수행 합니다. 


                   ------------------->  while_1.html 
                   ------------------->  while_2.html  
                   ------------------->  while_3.html
         
         - do while 반복문?
            : 일단 반복실행할 명령을 한번 먼저 실행한 후 
                          조건식을 판단 해서 true이면
              do { } 내부에 작성된 반복실행할 명령 코드를 실행하고,
                          조건식을 판단 해서 false이면 
                          반복실행할 명령 코드를 실행하지 않고  do{} while() 반복문 빠져나감

               문법
                     do {
                         
                         	반복실행할 명령;

                     }while(조건식)

               -------------------->  do_while.html 


          - for반복문
             :  조건식을 만족할떄까지 특정 실행문을 반복하여 실행하는 구문

             - 문법
                     for(초기값;  조건식;  증감식){
                         let i=1;  i<10;    i++

                           	실행문;

                     }
             - 실행 순서
                           초기값 -> 조건식 -> 실행문 -> 증감식 
                                  -> 조건식 이 거짓인경우만 for {}반복문 빠져나감

                     -----------------> for_1.html
                     -----------------> for_2.html

         참고. 지금 까지 살펴본 for, while, do while 반복문들 중에서 
			     어떤 반복문을 사용해야 할까?

				for반복문 사용의 경우 
					변수의 초깃값과 반복 크기가 일정할 경우 for반복문 사용!
					예를 들어 변수에 숫자 0 ~ 9를 1씩 증가시키면서 0이 9가될떄까지만
					차례로 반복해서 사용하려면 for(i=0;  i<10;  i++)을 쓰면 편리함

				while 또는 do while반복문 사용의 경우
					변수의 초깃값이나 반복 크기 없이 조건식만 주어졌을 때 많이 사용
					어떤 조건식을 만족하는 동안만 반복 실행할 문장을 반복실행할때 사용


         - break 문 
           - 반복문인 while 또는 for문에서 break문을 작성해서 실행하면
                        조건식의 결과와 상관없이 강제로 반복문을 종료할때 사용하는 예약어구문

             ----------------------> break_1.html 

         - continue문
           - continue문은 반복문내에서 사용하는 예약어 인데....

            1. while반복문 안에 있는 continue문은 다음에 오는 
              "실행문은 무시하고 조건식에서 조건검사를 실행해!" 라고 명령하는 구문임

            2. for반복문 안에 있는 continue문을 실행할 경우에는
               continue문 다음에 오는 실행문은 무시해 버리고
                            바로 증감식으로 이동하여 증감 연산을 실행 합니다.   

               -----------------> continue.html  


         - 중첩 for문

					-for문안에 for문을 사용하는 구문.
					
					-기본문법
							
							for(초기값; 조건식;  증감식){      //바깥쪽 for문
								for(초기값; 조건식; 증감식){  //안쪽  for문
										반복할 소스(실행문); 
								}
							}
							
               -------------------> double_for_1.html
               -------------------> double_for_2.html
               
               ------------------->  종합 문제 seat-result.html         