자료형?
- 자료의 형태
- 자료의 종류
- 데이터의 유형
- 예를 들어 3 <- 숫자형
- 예를 들어 '3' <- 문자열형
- 예를 들어 true <- 논리형

1. 자료의 형태
자바스크립트에서 자료형은 크게 두 가지로 나눌 수 있습니다:

원시 자료형 (Primitive Types): 변경 불가능한 값으로, 단일 값을 나타냅니다.
객체 자료형 (Object Types): 여러 값을 포함할 수 있는 복합 자료형으로, 키-값 쌍으로 구성됩니다.

2. 자료의 종류 및 데이터의 유형
	1) 원시 자료형 (Primitive Types)
	원시 자료형은 변경 불가능한 값으로, 다음과 같은 종류가 있습니다:
	
	
		숫자형 (Number):
		
		예: 3 (정수), 3.14 (실수), -5 (음수), Infinity (무한대), NaN (숫자가 아님)
		설명: 숫자를 나타내며, 정수와 실수를 모두 포함합니다. 
		        자바스크립트에서는 모든 숫자가 64비트 부동 소수점 형식으로 저장됩니다. 
		     NaN은 수학적 연산에서 정의되지 않은 값을 나타내며, Infinity는 무한대를 나타냅니다.
		
		
		
		문자열형 (String):
		예: '3', "Hello, World!", `Template String`
		설명: 문자들의 집합으로, 작은따옴표('), 큰따옴표("), 또는 백틱(``` ` ``)으로 감싸서 표현합니다. 
		         백틱을 사용하면 문자열 내에 변수를 삽입하거나 여러 줄의 문자열을 쉽게 작성할 수 있습니다.
		
		
		논리형 (Boolean):
		예: true, false
		설명: 참(true) 또는 거짓(false) 값을 나타냅니다. 
		         조건문이나 반복문에서 주로 사용되며, 논리 연산의 결과로도 사용됩니다.
		
		
		
		undefined:
		예: let a; (값이 할당되지 않은 변수)
		설명: 변수가 선언되었지만 값이 할당되지 않은 상태를 나타냅니다. 
		         함수가 반환값을 명시적으로 지정하지 않을 때도 undefined가 반환됩니다.
		
		
		
		null:
		예: let b = null;
		설명: 의도적으로 비어있는 값을 나타내며, 객체가 존재하지 않음을 의미합니다. 
		        개발자가 특정 변수에 대해 "값이 없음"을 명시적으로 표현할 때 사용합니다.
		
		
		
		심볼형 (Symbol) (ES6에서 추가):
		
		예: const sym = Symbol('description');
		설명: 고유하고 변경 불가능한 값을 생성하는 데 사용됩니다. 
		        주로 객체의 속성 키로 사용되며, 같은 설명을 가진 심볼이라도 서로 다른 고유한 값을 가집니다. 
		        이는 객체의 속성 이름 충돌을 방지하는 데 유용합니다.



	2) 객체 자료형 (Object Types)
	객체 자료형은 여러 값을 포함할 수 있는 복합 자료형입니다. 객체는 키-값 쌍으로 구성됩니다.
	
						{  키:값 ,   키2:값2                }
		객체 (Object):
		예: let person = { name: "Alice", age: 25 };
		설명: 여러 속성을 가질 수 있는 데이터 구조입니다. 
			 객체는 중괄호 {}로 감싸며, 속성은 키와 값의 쌍으로 정의됩니다. 
			 객체의 속성에 접근할 때는 점(.) 표기법이나 대괄호([]) 표기법을 사용할 수 있습니다.
		
		
		
		배열 (Array):
		예: let numbers = [1, 2, 3, "Hello"];
		설명: 여러 값을 순서대로 저장할 수 있는 객체의 일종입니다. 
		         배열은 대괄호 []로 감싸며, 인덱스를 사용하여 각 요소에 접근할 수 있습니다. 
		         배열은 다양한 자료형의 값을 포함할 수 있으며, 배열 메서드를 사용하여 요소를 추가, 삭제, 정렬 등의 작업을 수행할 수 있습니다.
		
		
		
		함수 (Function):
		예: function greet() { return "Hello"; }
		설명: 실행 가능한 코드 블록으로, 객체로 취급됩니다. 
		          함수는 다른 함수의 인수로 전달되거나, 변수에 할당될 수 있으며, 클로저와 같은 고급 개념을 활용할 수 있습니다. 
		          자바스크립트에서는 함수를 일급 객체로 취급하여, 함수 자체를 변수에 할당하거나 반환할 수 있습니다.        

----------------------------------------------------------------------------------------



숫자형 (number): 정수와 실수로 구분된 데이터

정수 : 소수점이 없는 숫자.
실수 : 소수점이 있는 숫자.

실습파일 
  숫자형.html


숫자형에는 정수,실수 말고도 일반적이지 않은 몇가지 값이 더 있습니다.
  Infinity <- 양의 무한대
  -Infinity <- 음의 무한대
  NaN <- Not a Number라는 뜻으로 표현이 불가능한 숫자형의 결과를 표현할떄 사용하는 값
               예를 들어  숫자와 문자열을 곱하면 정상적인 연산의 결과물이 나올수 없다.
        NaN이라는 값을 얻습니다. 

        실습파일
          숫자형2.html 

-----------------------------------------------------------------------------

문자열(string) : 작은따옴표'' 나 큰따옴표"" 나  백틱`` 로 묶은 데이터를 의미 함.
         		그래서 숫자도 작은 따옴표나 큰따옴표로 묶으면 웹브라우저는 문자열로 인식함

         실습파일
            문자열.html
            문자열2.html 
            
--------------------------------------------------------------------------------

논리형 :  
        - Boolean(불린)유형의 데이터라고 말하며,
	          단 2개의 데이터만 존재합니다.
	          참 true
	          거짓 false

        -  어떤 조건을 확인해서 그 조건이 맞으면  true 참,
          	 맞지 않으면 false 거짓의 결괏값을 얻을수 있습니다.

      실습파일
          논리형.html
----------------------------------------------------------------

undefiend유형 :
	undefined는 자바스크립트에서 "값이 할당되지 않은 상태"를 나타내는 특별한 값입니다. 
	즉, 변수가 선언되었지만 아직 어떤 값도 주어지지 않았을 때 그 변수의 값은 undefined가 됩니다.
	개발자가 직접  undefined 값을 변수에 저장하는 것이 아니라 자바스크립트 브라우저 엔진 소프트웨어가 자동으로 할당하는값입니다

        예)   let num;

          console.log(num);
      - 변수만 선언하고 값이 저장되지 않는 형태의 데이터(자료형)을 undefiend값이라 합니다

        실습파일
           undefiend.html
------------------------------------------------------------------

null유형 : 
    - null은 "의도적으로 비어있는 값"을 나타냅니다. 
          즉, null은 개발자가 "여기에 값이 없음을 명시적으로 표현하고 싶다"는 의도를 가지고 사용할 때 사용합니다.

        실습파일
            null_.html
  
undefiend와 null 비교 
	실습파일  undefiend_null.html           

------------------------------------------------------------------
자료형 변환?
- 어떤 자료의 데이터를 다른 자료유형의 데이터로 형태를 변환하는것.
- 자료의 형태를 변환 하는것.

자료형 변환 하는 방법 2가지
1. 묵시적 형 변환 : 자바스크립트 엔진 알아서 스스로 자료의 형태 변환
                    (자동 형 변환)

2. 명시적 형 변환  : 프로그래머가 의도적으로 어떤 자료의 형태를 
                              다른 자료의 형태로 변환
                     (강제로 형 변환)

  실습파일
      자료형변환.html
















